version: "3.8"

services:
    # MySQL Database
    db:
        image: mysql:8.0
        container_name: ptsmart-crm-db
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
        volumes:
            - mysql_data:/var/lib/mysql
            - ./docker/mysql/init:/docker-entrypoint-initdb.d
        ports:
            - "3306:3306"
        networks:
            - ptsmart-network

    # Laravel Backend
    backend:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: ptsmart-crm-backend
        restart: unless-stopped
        environment:
            - APP_ENV=${APP_ENV}
            - APP_DEBUG=${APP_DEBUG}
            - APP_KEY=${APP_KEY}
            - DB_CONNECTION=${DB_CONNECTION}
            - DB_HOST=db
            - DB_PORT=${DB_PORT}
            - DB_DATABASE=${DB_DATABASE}
            - DB_USERNAME=${DB_USERNAME}
            - DB_PASSWORD=${DB_PASSWORD}
        volumes:
            - ./storage:/var/www/html/storage
            - ./bootstrap/cache:/var/www/html/bootstrap/cache
        ports:
            - "8000:80"
        depends_on:
            - db
        networks:
            - ptsmart-network

    # React Frontend
    frontend:
        build:
            context: ./frontend
            dockerfile: Dockerfile
        container_name: ptsmart-crm-frontend
        restart: unless-stopped
        environment:
            - REACT_APP_API_URL=http://localhost:8000/api
        ports:
            - "3000:80"
        depends_on:
            - backend
        networks:
            - ptsmart-network

    # Redis (for caching and sessions)
    redis:
        image: redis:7-alpine
        container_name: ptsmart-crm-redis
        restart: unless-stopped
        ports:
            - "6379:6379"
        volumes:
            - redis_data:/data
        networks:
            - ptsmart-network

    # Nginx (Reverse Proxy)
    nginx:
        image: nginx:alpine
        container_name: ptsmart-crm-nginx
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./docker/nginx/sites:/etc/nginx/sites-available
            - ./docker/nginx/ssl:/etc/nginx/ssl
        depends_on:
            - backend
            - frontend
        networks:
            - ptsmart-network

volumes:
    mysql_data:
        driver: local
    redis_data:
        driver: local

networks:
    ptsmart-network:
        driver: bridge
